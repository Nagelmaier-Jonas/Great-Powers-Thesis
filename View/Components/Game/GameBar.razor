@using View.Dialogs
@using Model.Entities
@using Domain.Repositories
@inject IDialogService DialogService

@if (Info is not null){
    <MudAppBar Class="bg-opacity-60" Fixed="true">
        <MudAvatar Square="true" Style="@($"color:{Colors.Grey.Default};")" Class="gamebar-btn" Variant="Variant.Outlined" @onclick="OpenSettingsDialog">
            <MudIcon Icon="@Icons.Material.Filled.Settings"/>
        </MudAvatar>
        <MudText Style="@($"color:{Colors.Amber.Default};")" Class="ml-3 fw-bold">
            Round @Info?.Round
        </MudText>
        <MudSpacer/>
        @foreach (var nation in Nations.Where(i => i.Id is not 6).OrderBy(n => n.Type)){
            @if (nation.Id == Info.CurrentNationId){
                <MudBadge Color="Color.Success" Overlap="true" Dot="true">
                    <MudAvatar Image=@($"img/flags/{nation.Name}.svg") Class=@($"mr-1 bg-transparent border-{nation.Name}") />
                </MudBadge>
            }
            else{
                <MudAvatar Image=@($"img/flags/{nation.Name}.svg") Class=@($"mr-1 bg-transparent border-{nation.Name}") />
            }
        }
        <MudSpacer/>
        <MudText Class="fw-bold" Style="@($"color:{Colors.Amber.Default};")">
            @Info?.Phase.ToString()
            <br/>
            <span class="d-flex justify-content-around">
                @for (int i = 0; i < 6; i++){
                    @if (i == Convert.ToInt32(Info?.Phase)){
                        <MudAvatar Class="dot-mini" Size="Size.Small" Style="@($"background-color:{Colors.Amber.Default};")"/>
                    }
                    else{
                        <MudAvatar Class="dot-mini" Size="Size.Small"/>
                    }
                }
            </span>
        </MudText>
        <MudSpacer/>
        @if (Info.StandardVictory){
            <MudAvatar Class="gamebar-score fw-bold" Square="true" Variant="Variant.Outlined" Style="@($"color:{Colors.Grey.Default};")">@Info?.AxisCapitals/9</MudAvatar>
        }
        else{
            <MudAvatar Class="gamebar-score fw-bold" Square="true" Variant="Variant.Outlined" Style="@($"color:{Colors.Grey.Default};")">@Info?.AxisCapitals/12</MudAvatar>
        }
        <MudStack Row="true" Style="gap: 1px !important;">
            @for (int i = 0; i < Info?.AxisCapitals; i++){
                <MudPaper Class="gamebar-score-point bg-red"/>
            }
            @for (int i = 0; i < Info?.AlliesCapitals; i++){
                <MudPaper Class="gamebar-score-point bg-blue"/>
            }
        </MudStack>
        @if (Info.StandardVictory){
            <MudAvatar Class="gamebar-score fw-bold" Square="true" Variant="Variant.Outlined" Style="@($"color:{Colors.Grey.Default};")">@Info?.AlliesCapitals/9</MudAvatar>
        }
        else{
            <MudAvatar Class="gamebar-score fw-bold" Square="true" Variant="Variant.Outlined" Style="@($"color:{Colors.Grey.Default};")">@Info?.AlliesCapitals/12</MudAvatar>
        }
    </MudAppBar>

    @*<MudPaper Class="position-fixed bottom-0 end-0 d-flex flex-column align-items-center justify-content-around phase-btn">
        <MudText Class="fw-bold text-center" Style="@($"color:{Colors.Amber.Default};")">End Phase</MudText>
        <MudIconButton OnClick="OpenPhaseSummaryDialog" Icon="@Icons.Rounded.Forward" Variant="Variant.Filled" Color="Color.Error" Size="Size.Large" Style="border-radius: 50%;"/>
    </MudPaper>*@
}

@code {

    [Parameter]
    public SessionInfo? Info { get; set; }

    [Parameter]
    public List<Nation> Nations { get; set; } = new();

    private void OpenSettingsDialog(){
        var options = new DialogOptions{ CloseOnEscapeKey = true, CloseButton = true };
        DialogService.Show<SettingsDialog>("Menu", options);
    }

    private void OpenPhaseSummaryDialog(){
        var options = new DialogOptions{ CloseOnEscapeKey = false, DisableBackdropClick = true };
        DialogService.Show<PhaseSummaryDialog>("Phase Summary", options);
    }

}