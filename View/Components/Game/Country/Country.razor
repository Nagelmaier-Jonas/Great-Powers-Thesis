@using Model.Entities.Regions
@using Model.Entities
@using Domain.Services
@using View.Services
@inject CountryPaths CountryPaths
@inject ActiveRegion ActiveRegion

@if (Region is not null){
    @if (CountryPaths.ContainsKey(Region.Identifier)){
        @if (Region.Type == ERegionType.LAND){
            @if (Owner.Type == ENation.Neutral){
                <path d="@CountryPaths[Region.Identifier]" class="svg_country @Owner.Name" style="fill: url(#neutral)" stroke="grey" stroke-width="2"/>
            }
            else{
                @if (ActiveRegion.Region == Region){
                    <path d="@CountryPaths[Region.Identifier]" class="active_country svg_country @Owner.Name" fill="@Owner.Color" stroke="grey" stroke-width="2" @onclick="args => UpdateRegion(args)"/>
                }
                else{
                    <path d="@CountryPaths[Region.Identifier]" class="svg_country @Owner.Name" fill="@Owner.Color" stroke="grey" stroke-width="2" @onclick="args => UpdateRegion(args)"/>
                }
                @if (Region.GetIncome() is not 0){
                    if (Capital is not null){
                        <circle fill="transparent" stroke="#FFC107" stroke-width="1" cx="@(Region.PositionX + 12)" cy="@(Region.PositionY + 12)" r="5"/>
                        <circle fill="transparent" stroke="#FFC107" stroke-width="1" cx="@(Region.PositionX + 12)" cy="@(Region.PositionY + 12)" r="8"/>
                    }
                    else{
                        <circle fill="transparent" stroke="white" stroke-width="1" cx="@(Region.PositionX + 12)" cy="@(Region.PositionY + 12)" r="5"/>
                    }
                    @if (Region.GetIncome() > 9){
                        <text>
                            <text style="font-size: 6px; font-weight: bold; fill: white; transform: translate(-4px, 2px);" x="@(Region.PositionX + 12)" y="@(Region.PositionY + 12)">
                                @Region.GetIncome()
                            </text></text>
                    }
                    else{
                        <text>
                            <text style="font-size: 7px; font-weight: bold; fill: white; transform: translate(-2px, 2px);" x="@(Region.PositionX + 12)" y="@(Region.PositionY + 12)">
                                @Region.GetIncome()
                            </text></text>
                    }
                }
            }
        }
        else{
            @if (ActiveRegion.Region == Region){
                <path d="@CountryPaths[Region.Identifier]" class="active_country svg_country seezone" style="fill: url(#water)" stroke="grey" stroke-width="2" @onclick="args => UpdateRegion(args)"/>
            }
            else{
                <path d="@CountryPaths[Region.Identifier]" class="svg_country seezone" style="fill: url(#water)" stroke="grey" stroke-width="2" @onclick="args => UpdateRegion(args)"/>
            }
        }
    }
}

@code {

    [Parameter]
    public ARegion? Region { get; set; }

    [Parameter]
    public Nation Owner { get; set; } = new();

    private Capital? Capital { get; set; }

    protected override void OnInitialized(){
        Capital = Region?.GetCapital();
    }

    private void UpdateRegion(MouseEventArgs args){
        if (args.ShiftKey){
            return;
        }
        if (Region != null) ActiveRegion.RefreshRegion(Region);
    }

}