@using Model.Entities
@using Domain.Repositories
@using Domain.Repositories.Implementations
@using EventHandling.EventHandler
@using MudBlazor.Utilities
@inherits LayoutComponentBase
@inject UserRepository UserRepository

<PageTitle>Great - Powers</PageTitle>

<MudThemeProvider Theme="_theme"/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<CascadingValue Value="CurrentUser">
    <div class="page">
        <div class="sidebar">
            <NavMenu/>
        </div>
        <main>
            <article class="content" style="padding: 0 !important;">
                @Body
            </article>
        </main>
    </div>
</CascadingValue>

@code{

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    private User? CurrentUser { get; set; }

    protected override async Task OnInitializedAsync(){
        var authState = await authenticationStateTask;
        var user = authState.User;

        if (user.Identity.IsAuthenticated){
            CurrentUser = Task.Run(() => UserRepository.GetByUsername(user.Identity.Name)).Result;
            if (CurrentUser is null){
                Console.WriteLine("User not found");
            }
        }

        await InvokeAsync(StateHasChanged);
    }

    private readonly MudTheme _theme = new(){
        Palette ={
            Primary = new MudColor("#5d9943"),
            Secondary = new MudColor("#FFC107"),
            Tertiary = new MudColor("#9E9E9E"),
            Background = new MudColor("#a7a7a7"),
            Surface = new MudColor("#c3bfbf"),
            AppbarBackground = new MudColor("#a7a7a7"),
            DrawerBackground = new MudColor("#00000000"),
            Info = new MudColor("#bdbdbd")
        }
    };

}