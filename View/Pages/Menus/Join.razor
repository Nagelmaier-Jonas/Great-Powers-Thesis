@page "/Join"
@using Model.Configuration
@using Microsoft.EntityFrameworkCore
@using MySqlConnector
@inject GreatPowersDbContext GreatPowersDbContext
<h3>Join</h3>

<MudForm>
    <MudTextField T="string" Label="IpAddress" Required="true" RequiredError="Session name is required!" @bind-Value="IpAddress"/>
    <MudTextField T="string" Label="Port" Required="true" RequiredError="Session name is required!" @bind-Value="Port"/>
    <div class="d-flex align-center justify-space-between mt-3">
        <MudButton OnClick="JoinGame" Class="m-auto">Create</MudButton>
    </div>
</MudForm>

@code {
    private string? IpAddress { get; set; }

    private string? Port { get; set; }

    private bool IsLoading { get; set; }

    private async void JoinGame(){
        if (Port == null || IpAddress == null) return;
        IsLoading = true;
        if (CheckConnection()){
            await Task.Run(ChangeDbContext);
        }
        StateHasChanged();
    }

    private Task ChangeDbContext(){
        if (Port == null || IpAddress == null) return Task.CompletedTask;
        try{
            GreatPowersDbContext.Database.CloseConnection();
            GreatPowersDbContext.Database.SetConnectionString($"server={AppSettings.IpAddress}; port={AppSettings.Port}; database=greatpowers; user=greatpowers; password=greatpowers; Persist Security Info=False; Connect Timeout=300");
            GreatPowersDbContext.Database.OpenConnection();
            IsLoading = false;
            return Task.CompletedTask;
        }
        catch (Exception e){
            throw;
        }
    }

    private bool CheckConnection(){
        try{
            var connection = new MySqlConnection($"server={AppSettings.IpAddress}; port={AppSettings.Port}; database=greatpowers; user=greatpowers; password=greatpowers; Persist Security Info=False; Connect Timeout=300");
            connection.Open();
            connection.Close();
            AppSettings.Port = Port;
            AppSettings.IpAddress = IpAddress;
            return true;
        }
        catch (Exception){
            return false;
        }
    }

}